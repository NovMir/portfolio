---
export interface Props {
  href?: string;
  variant?: 'primary' | 'secondary';
  size?: 'sm' | 'md' | 'lg';
  fullWidth?: boolean;
  class?: string;
}

const {
  href,
  variant = 'primary',
  size = 'md',
  fullWidth = false,
  class: customClass = '',
  ...rest
} = Astro.props;

const baseClasses =
  'inline-flex items-center justify-center font-serif italic rounded-full transition whitespace-nowrap';

const variantClasses = {
  primary: 'bg-pink text-white hover:bg-pink-dark dark:bg-softpink dark:hover:bg-softpink-dark',
  secondary: 'bg-gray-200 text-gray-800 hover:bg-gray-300 dark:bg-gray-700 dark:text-white dark:hover:bg-gray-600'
};

const sizeClasses = {
  sm: 'px-4 py-2 text-sm',
  md: 'px-6 py-3 text-base',
  lg: 'px-8 py-4 text-lg'
};

const widthClass = fullWidth ? 'w-full' : '';

const allClasses = [
  baseClasses,
  variantClasses[variant],
  sizeClasses[size],
  widthClass,
  customClass
].join(' ');
---

{href ? (
  <a href={href} class={allClasses} {...rest}>
    <slot />
  </a>
) : (
  <button class={allClasses} {...rest}>
    <slot />
  </button>
)}
